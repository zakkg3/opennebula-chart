{{- if .Values.auto_ssh.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "opennebula.name" . }}-ssh-keys
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{ template "opennebula.name" . }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "40"
    "helm.sh/hook-delete-policy":  hook-succeeded
spec:
  template:
    metadata:
      name: {{ template "opennebula.name" . }}-ssh-keys
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        app: {{ template "opennebula.name" . }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        release: {{ .Release.Name }}
        component: pre-install
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "opennebula.name" . }}-api
      automountServiceAccountToken: true
      containers:
        - name: pre-install
          image: "{{ .Values.auto_ssh.image }}:{{ .Values.auto_ssh.tag }}"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command: 
            - "/bin/sh"
            - "-ec"
            - |
              mkdir opennebula-ssh-keys && \
              ssh-keygen -f opennebula-ssh-keys/id_rsa -C oneadmin -P '' && \
              cat opennebula-ssh-keys/id_rsa.pub > opennebula-ssh-keys/authorized_keys && \
              cat > opennebula-ssh-keys/config <<EOT
              # Automatically add keys to ssh-agent.
              AddKeysToAgent yes

              Host *
                 Port 2022
                 LogLevel ERROR
                 StrictHostKeyChecking no
                 UserKnownHostsFile /dev/null
                 GSSAPIAuthentication no
                 User oneadmin
                 # Forward agent to workers so we don't have to place our private key on all nodes.
                 ForwardAgent yes
              EOT
              curl -s -X POST -k https://kubernetes.default.svc/api/v1/namespaces/${NAMESPACE}/secrets \
                -H "Authorization: Bearer $( cat /var/run/secrets/kubernetes.io/serviceaccount/token )" \
                -H "Content-Type: application/json" \
                -H "Accept: application/json" \
                -d "{ \"kind\": \"Secret\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"{{ include "opennebula.fullname" . }}-ssh-keys\", \"namespace\": \"${NAMESPACE}\" }, \"type\": \"Opaque\", \"data\": { \"authorized_keys\": \"$( cat opennebula-ssh-keys/authorized_keys | base64 | tr -d '\n' )\", \"config\": \"$( cat opennebula-ssh-keys/config | base64 | tr -d '\n' )\", \"id_rsa\": \"$( cat opennebula-ssh-keys/id_rsa | base64 | tr -d '\n' )\", \"id_rsa.pub\": \"$( cat opennebula-ssh-keys/id_rsa.pub | base64 | tr -d '\n' )\" } }" > /dev/null
{{- end }}
